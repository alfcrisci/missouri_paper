##########################################################
# Please verify installation of any package
# install.packages(c("MASS","xts","gvlma","forecast","lubridate","sjPlot","Metrics","forecast","ggplot2","reshape2","scales")
library(MASS)
library(xts)
library(gvlma)
library(forecast)
library(lubridate)
library(sjPlot)
library(Metrics)
library(forecast)
library(ggplot2)
library(reshape2)
library(scales)
##########################################################
library(xtable)
library(pander)
library(memisc)
##########################################################
setwd("/home/alf/Scrivania/lav_DISIT_abstract/missouri_paper")
citation("Metrics")
citation("forecast")
citation("MASS")
citation("gvlma")
citation("xts")
citation("lubridate")
#######################################################################################################
# Load data
expo2015=read.csv("expo2015_work_matrix.csv")
#######################################################################################################
# set up calendar variables and eliminate no useful variables
dates_expo=as.Date(expo2015$date)
expo2015$wday=as.factor(wday(dates_expo))
rownames(expo2015)=dates_expo
expo2015$date=NULL
#######################################################################################################
# sub queries of Expo2015 channel Twitter Vigilance
Q_EXPO2015=c("@4expo","@Pad_Ita2015","@EUExpo2015",
"@ExpoinCitta","@askexpo","@RaiExpo",
"#ExpoMilano2015","@cartadimilano","#alberodellavita")
#######################################################################################################
# Linear modeling with model selection with backward AIC esclusion
# training period 01-08-2015 - 10-10-2015 71 days testing period 15 days 11-10-2015-26-10-2015
model_sel=stepAIC(lm(expo_p ~.-TW_RTW_expo2015 -1,data=expo2015[1:71,]))
#######################################################################################################
# Check model assunption
gv_expo2015_model <- gvlma(model_sel)
gv_expo2015_model
#######################################################################################################
# Assessement and instancing data.frame variables
expo2015$predicted_ML=as.numeric(predict(model_sel,expo2015))
pred_conf=predict(model_sel,expo2015,"confidence")
expo2015$arima_reg=NA
expo2015$arima_pure=NA
pred_conf
model_sel
predict(model_sel,expo2015,"confidence")
predict(model_sel,expo2015)
predict(model_sel,expo2015,interval="confidence")
guess_fit_arima<- auto.arima(expo2015$expo_p)
htmlreg(summary(guess_fit_arima))
library(texreg)
htmlreg(summary(guess_fit_arima))
summary(guess_fit_arima)
# ARIMAX no covariates but imposing seasonality ( weekly cycle) and dritf for trend.
model_nocov <- Arima(expo2015$expo_p[1:71], order=c(2,1,2), seasonal=list(order=c(1,0,0), period=7,include.drift=T))
fc_nocov=forecast(model_nocov,h=21)
#######################################################################################################
# creating covariate  for arimax forecast
xreg_expo2015=expo2015[c("RaiExpo_ratio","alberodellavita_ratio","expo2015_ratio")]
reg=xreg_expo2015[1:71,]
row.names(reg)=NULL
newreg=data.frame(xreg_expo2015[72:92,])
row.names(newreg)=NULL
# ARIMAX with covariates #######################################################################################
model <- Arima(expo2015$expo_p[1:71], order=c(2,1,2), seasonal=list(order=c(1,0,0), period=7,include.drift=T),xreg=reg)
model
XF9_data=read.csv("XF9_mat_work.csv")
XF9_data$data=as.Date(XF9_data$data,format="%m/%d/%Y")
########################################################################à
# naming and data matrix set uo
names(XF9_data)
# [1] "Event"                "P_Auditel"            "P_PSKY"               "share"                "u_unique"             "TW_picco._min"
# [7] "TW_RTW_XF9_day"       "TW_RTW_XF9_dayafter"  "TW_RTW_XF9_2day"      "TW_XF9_day"           "RTW_XF9_day"          "TW_XF9_dayafter"
# [13] "RTW_XF9_dayafter"     "TW_XF9_2day"          "TW_RTW_XF9_week"      "TW_XF9_week"          "TRW_XF9_week"         "TW_XF9_week_declared"
########################################################################à
# Work matrix creation
XF9_data_sky=na.omit(XF9_data[c("data","P_PSKY","TW_RTW_XF9_week","TW_XF9_week")])
XF9_data_sky$RTW_XF9_week_ratio=XF9_data_sky$TW_RTW_XF9_week/XF9_data_sky$TW_XF9_week
########################################################################################################################################################################ààà
# Linear modeling with P_sky
model_sky_XF9=lm(P_PSKY ~ . -data -1,data=XF9_data_sky)
summary(model_sky_XF9)
sjt.lm(model_sky_XF9,file="model_sel_sky_XF9.htm")
gv_sky_XF9 <- gvlma(model_sky_XF9)
pander(gv_sky_XF9)
XF9_pred_sky<- as.data.frame(predict(model_sky_XF9,interval="prediction"))
write.csv(XF9_pred_sky,"results/XF9_predictions_sky.csv")
XF9_pred_sky$obs=XF9_data_sky$P_PSKY
XF9_pred_sky$event=XF9_data_sky$data
XF9_rmse_sky=rmse(XF9_pred_sky$fit,XF9_pred_sky$obs)
plot_XF9_sky<- melt(XF9_pred_sky[c("event","fit","obs")], id.vars="event")
########################################################################################################################################################################ààà
# Plot results
ggplot(XF9_pred_sky, aes(x=event, y=value,fill=variable))+ geom_bar(stat = "identity", position=position_dodge(), colour="black" )+
geom_errorbar(aes(ymin=c(rep(0,length(XF9_pred_sky$lwr)),XF9_pred_sky$lwr),
ymax=c(rep(0,length(XF9_pred_sky$upr)),XF9_pred_sky$upr),
size=.2,    # Thinner lines
width=.3
),show_guide=FALSE)+
ylab("Audience Count Auditel")+
xlab("Date XF9") +
scale_x_date(labels = date_format("%m/%d"), breaks = date_breaks("week"))+
scale_fill_manual(values=c("#999999", "#E69F00"),name="Prediction XF9 Data Auditel",labels=c("Prediction", "Observed"))
ggsave("charts/prediction_Sky.png")
ggplot(XF9_pred_sky, aes(x=event, y=value,fill=variable))+ geom_bar(stat = "identity", position=position_dodge(), colour="black" )+
geom_errorbar(aes(ymin=c(rep(0,length(XF9_pred_sky$lwr)),XF9_pred_sky$lwr),
ymax=c(rep(0,length(XF9_pred_sky$upr)),XF9_pred_sky$upr),
size=.2,    # Thinner lines
width=.3
),show_guide=FALSE)+
ylab("Audience Count Auditel")+
xlab("Date XF9") +
scale_x_date(labels = date_format("%m/%d"), breaks = date_breaks("week"))+scale_fill_manual(values=c("#999999", "#E69F00"),name="Prediction XF9 Data Auditel",labels=c("Prediction", "Observed"))
XF9_pred_sky
plot_XF9_sky<- melt(XF9_pred_sky[c("event","fit","obs")], id.vars="event")
ggplot(XF9_pred_sky, aes(x=event, y=value,fill=variable))+ geom_bar(stat = "identity", position=position_dodge(), colour="black" )+
geom_errorbar(aes(ymin=c(rep(0,length(XF9_pred_sky$lwr)),XF9_pred_sky$lwr),
ymax=c(rep(0,length(XF9_pred_sky$upr)),XF9_pred_sky$upr),
size=.2,    # Thinner lines
width=.3
),show_guide=FALSE)+
ylab("Audience Count Auditel")+
xlab("Date XF9") +
scale_x_date(labels = date_format("%m/%d"), breaks = date_breaks("week"))+scale_fill_manual(values=c("#999999", "#E69F00"),name="Prediction XF9 Data Auditel",labels=c("Prediction", "Observed"))
ggplot(XF9_pred_sky, aes(x=event, y=value,fill=variable))+ geom_bar(stat = "identity", position=position_dodge(), colour="black" )+
geom_errorbar(aes(ymin=c(rep(0,length(XF9_pred_sky$lwr)),XF9_pred_sky$lwr),
ymax=c(rep(0,length(XF9_pred_sky$upr)),XF9_pred_sky$upr),
size=.2,    # Thinner lines
width=.3
),show_guide=FALSE)
plot_XF9_sky
ggplot(XF9_pred_sky, aes(x=event, y=value,fill=variable))+ geom_bar(stat = "identity", position=position_dodge(), colour="black" )
ggplot(plot_XF9_sky, aes(x=event, y=value,fill=variable))+ geom_bar(stat = "identity", position=position_dodge(), colour="black" )+
geom_errorbar(aes(ymin=c(rep(0,length(XF9_pred_sky$lwr)),XF9_pred_sky$lwr),
ymax=c(rep(0,length(XF9_pred_sky$upr)),XF9_pred_sky$upr),
size=.2,    # Thinner lines
width=.3
),show_guide=FALSE)+
ylab("Audience Count Auditel")+
xlab("Date XF9") +
scale_x_date(labels = date_format("%m/%d"), breaks = date_breaks("week"))+
scale_fill_manual(values=c("#999999", "#E69F00"),name="Prediction XF9 Data Auditel",labels=c("Prediction", "Observed"))
ggsave("charts/prediction_Sky.png")
ggsave("chart/prediction_Sky.png")
ggsave("graphs/prediction_Sky.png")
ggplot(plot_XF9_sky, aes(x=event, y=value,fill=variable))+ geom_bar(stat = "identity", position=position_dodge(), colour="black" )+
geom_errorbar(aes(ymin=c(rep(0,length(XF9_pred_sky$lwr)),XF9_pred_sky$lwr),
ymax=c(rep(0,length(XF9_pred_sky$upr)),XF9_pred_sky$upr),
size=.2,    # Thinner lines
width=.3
),show_guide=FALSE)+
ylab("Audience Count SKY Platform")+
xlab("Date XF9") +
scale_x_date(labels = date_format("%m/%d"), breaks = date_breaks("week"))+
scale_fill_manual(values=c("#999999", "#E69F00"),name="Prediction XF9 Audience Sky ",labels=c("Prediction", "Observed"))
ggsave("graphs/prediction_Sky.png")
